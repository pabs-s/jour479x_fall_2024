### First Presentation - Data Backgrounding

Question: Which NBA media outlets best provide accurate post-draft grades for lottery picks (1-14)? Can we grade the graders?

This is a question that I pitched for the class project, but I'm doing it on a smaller scale for this individual project. Grades would be collected from publicly available published articles from outlets like ESPN, CBS Sports, The Ringer, Bleacher Report and Yahoo! Sports. Draft pick orders can be located from several different sources, and player stats can be pulled from Basketball Reference. Since draft grades are listed in an A-F format, we'd have to create a formula for a 4.0 GPA scale that we can then use to evaluate players' stats since their draft and determine whether they deserve the grade they were originally awarded by an outlet. 

_1. Does that data already exist? Can you get it?_
The data exists. However, it will take some cleaning and merging efforts to combine everything into one data set. Draft orders and picks are publicly available, and I can pull that data for each draft from Basketball Reference (https://www.basketball-reference.com/draft/_). Draft grades are also publicly available online. For example, here are links from various publications for their 2024 NBA Draft grades (ESPN: https://archive.ph/4NtTs, CBS: https://www.cbssports.com/nba/news/2024-nba-draft-grades-complete-pick-by-pick-analysis-for-rounds-1-and-2-from-zaccharie-risacher-to-bronny-james/, The Ringer: https://nbadraft.theringer.com/draft-grades, Bleacher Report: https://bleacherreport.com/articles/10126327-grading-every-nba-teams-2024-nba-draft-performance-including-trades, Yahoo Sports: https://sports.yahoo.com/2024-nba-draft-grades-for-all-30-teams-with-high-marks-for-lakers-and-knicks-012056013.html)

The Ringer will be an exception as it was launched in 2016. Many of its former employees were part of a publication called Grantland, and some also transferred to ESPN after a merger between the two companies, but I could not find draft grades dating back to those days, so I'll have to add a disclaimer to their results.

_2. Do you need assistance in getting it?_
As shown above, I don't think I'll need assistance getting this data. Most of the work here is putting it all together into one cohesive data set.

_3. What time frame do you want/need data from?_
I'm going to start with drafts dating back to 2011 (that was the earliest available year for ESPN) all the way to 2023 because there is no NBA data for those players yet. I may have to find a workaround for extending this analysis prior to 2011. 

_4. Will you have to improve or augment the data in order to answer your question? If so, how?_
My initial plan is to use win shares by player as a metric for measuring an individual's impact after being drafted (that's a stat that is provided on BBref). I'll have to establish a weighted/grading system for that metric, by which to grade players to determine if the initial draft grade matches their current grade. I'll also have to take each year's picks and merge them into one data set. My plan for the data set is that each player will serve as its own row. Columns will be as follows: Draft year, pick number, draft team, current team, publication grade upon being drafted, average publication grade, win share and my grade based on win share. 

_5. Are there other examples of this kind of work (specific or general)? If so, provide them._
After doing some searching, I'm having trouble finding whether others have taken it upon themselves to do this type of project. However, searching for it is difficult because most of the results include standard draft grade articles, as opposed to comparisons.

_6. Create code blocks to load the appropriate libraries and then read in the data_

Below, I've loaded the draft data that I'll be using for my analysis. The grade data will involve using ChatGPT to take the grades from the URL and turn them into a CSV format that I can merge to the larger combined data set. Once I merge the different draft years into one data set, I'll add the grade data I've collected in the next phase of the project, and then I'll mutate a column for average grade and another for draft year. 

```{r}

library(readr)
library(tidyverse)
library(purrr)
library(scales)
library(ggplot2)
library(ggalt)

```

My data wasn't loading properly using the format that we normaly use. Therefore, I had to ask ChatGPT to help me reset the working directory. I'm not sure if that will impact other projects I have in this repository, but it did help me load everything in. 

```{r}

setwd("/Users/psuarez/Documents/GitHub/jour479x_fall_2024/data/")
rookie11 <- read_csv("rookie11.csv")
rookie12 <- read_csv("rookie12.csv")
rookie13 <- read_csv("rookie13.csv")
rookie14 <- read_csv("rookie14.csv")
rookie15 <- read_csv("rookie15.csv")
rookie16 <- read_csv("rookie16.csv")
rookie17 <- read_csv("rookie17.csv")
rookie18 <- read_csv("rookie18.csv")
rookie19 <- read_csv("rookie19.csv")
rookie20 <- read_csv("rookie20.csv")
rookie21 <- read_csv("rookie21.csv")
rookie22 <- read_csv("rookie22.csv")
rookie23 <- read_csv("rookie23.csv")

```

```{r}

view(rookie15)

```

### First Presentation -- Exploration

Given the feedback I gave you in ELMS, take the next step in your presentation analysis and explore the data more. Continue in your background.rmd notebook and add a section in which you write code that describes your data: how many rows, the range of time it covers, etc. If you are using game-level data, use a group_by statement that shows the potential values in a key column you'll need to answer your question and how many times each value occurs.

If you have categorical data (for example, a single column in which the values can be put into groups), make a bar chart of it.

Describe any weaknesses or challenges that these steps have surfaced for you - do they make your question harder to answer?

----

For this first step, I'm going to join the 13 data frames I called in. First, I need to add a year column to make it easier to distinguish the year a player was drafted.

```{r}
rookie11 <- rookie11 |>
  mutate(yr = 2011) |>
  select(yr, everything())

rookie12 <- rookie12 |>
  mutate(yr = 2012) |>
  select(yr, everything())

rookie13 <- rookie13 |>
  mutate(yr = 2013) |>
  select(yr, everything())

rookie14 <- rookie14 |>
  mutate(yr = 2014) |>
  select(yr, everything())

rookie15 <- rookie15 |>
  mutate(yr = 2015) |>
  select(yr, everything())

rookie16 <- rookie16 |>
  mutate(yr = 2016) |>
  select(yr, everything())

rookie17 <- rookie17 |>
  mutate(yr = 2017) |>
  select(yr, everything())

rookie18 <- rookie18 |>
  mutate(yr = 2018) |>
  select(yr, everything())

rookie19 <- rookie19 |>
  mutate(yr = 2019) |>
  select(yr, everything())

rookie20 <- rookie20 |>
  mutate(yr = 2020) |>
  select(yr, everything())

rookie21 <- rookie21 |>
  mutate(yr = 2021) |>
  select(yr, everything())

rookie22 <- rookie22 |>
  mutate(yr = 2022) |>
  select(yr, everything())

rookie23 <- rookie23 |>
  mutate(yr = 2023) |>
  select(yr, everything())

```

Then, because each of the data frames have the same column names, I'm just going to use the bind_rows function to join them.

```{r}

nba_draft <- bind_rows(rookie11, rookie12, rookie13, rookie14, rookie15, rookie16, rookie17, rookie18, rookie19, rookie20, rookie21, rookie22, rookie23)

```

Next, I'm calling in the draft grades data I compiled over the last week, and then I'll join it to the nba_draft data frame.

```{r}
setwd("/Users/psuarez/Documents/GitHub/jour479x_fall_2024/data/")
draft_grades <- read_csv("draft_grades.csv")
view(draft_grades)
```

```{r}
nba_draft <- bind_cols(nba_draft, draft_grades)
```


With the data frame set up. I can shift my focus to answering the questions for this milestone.
_1. Add a section in which you write code that describes your data: how many rows, the range of time it covers, etc._

```{r}
num_rows <- nrow(nba_draft)
num_cols <- ncol(nba_draft)
cat("Number of Rows:", num_rows, "\n")
cat("Number of Columns:", num_cols, "\n")

min_year <- min(nba_draft$yr, na.rm = TRUE)
max_year <- max(nba_draft$yr, na.rm = TRUE)
cat("Data covers the years from", min_year, "to", max_year, "\n")

colnames(nba_draft)
```

_2. If you have categorical data (for example, a single column in which the values can be put into groups), make a bar chart of it._

I used ChatGPT to help me accomplish this task. I then altered some of the code to remove NA values. Here is the link to my query: https://chatgpt.com/share/670c7a20-1924-8010-8f68-12ad2fae3bdb

```{r}

grade_count <- draft_grades |>
  pivot_longer(cols = everything(), names_to = "source", values_to = "grade") |>
  drop_na() |> 
  group_by(grade) |>
  summarise(count = n(), .groups = "drop")

print(grade_count)

```

This is not my final analysis. However, here is a preliminary bar chart that counts the number of times a specific grade appears throughout this data set. It's still helpful in showing the grade distribution from the media in totality. Further analysis includes a stacked bar chart showing grades by outlet. 

Eventually, I'll work on my initial goal of linking individual win share by player with a GPA to get a better sense of their "actual" grade. 

```{r}
ggplot() + 
  geom_bar(
    data=grade_count, 
    aes(x=reorder(grade, -count),
        weight=count)) + 
  scale_y_continuous(labels=comma) + 
  labs(
    title="The Media Tends to Highly Grade NBA Lottery Picks", 
    x="Letter Grades", 
    y="Count") + 
  theme_minimal()
```

_3. Describe any weaknesses or challenges that these steps have surfaced for you - do they make your question harder to answer?_

There were a few issues I encountered during this milestone. Unfortunately, some of these pages (like ESPN) were collected using an archiving system, so ChatGPT could not process them. Other sites, like Bleacher Report and CBS, blocked ChatGPT access. The solution for this was to manually input grades from those websites.

Another issue I encountered in collecting data is that many are overall team draft grades, which see the writers consider later picks to form the grade. However, some accurate grades are still mixed into those articles because some grades only include first-round picks, and many teams only had their lottery pick in the first round. Regardless, this poses a significant challenge for analyzing individual grades.

Also, ESPN does not have grades starting from 2018 and onward. Therefore, it might be more useful for me to search for other outlets that have consistently put out grades on a yearly basis.

One challenge, which I believe I'll encounter in later milestones, is figuring out how to scale a GPA value to metrics like win share. That will require looking at the range of values in the data frame. 

-------

### Refining

Assignment Instructions:
Given the feedback I gave you in ELMS, take the next step in your presentation analysis and explore the data more. Continue in your background.rmd notebook and add a section in which you write code that extends and refines your analysis. You should have all of the data you need by now. If you do not have the data you need, talk to me.

This step is focused on getting a clear answer to your main question and developing secondary questions or theories that help test the validity of the original question (basically, what are the limits of this question - how much can/does the answer explain?). You should be getting results from writing code and then trying to visualize them in an appropriate manner. If you're not sure what kind of visualization works best, talk to me.

I want you to produce a fair bit of code this week - try things, experiment with the results, tweak your code to ask variations of the questions you have. If you're looking at your work and still have some obvious questions, you should try to answer them.

Analysis:
My first step is to turn my draft grades compiled from different publications and convert them to a 4.0 GPA scale. 
The code below transforms the grades to their corresponding values on the scale. 

```{r}

nba_draft_gpa <- nba_draft |>
  mutate(across(c(espn_gr, cbs_gr, br_gr, yahoo_gr, ringer_gr), 
  ~ case_when(
    . == "A"  ~ 4.0,
    . == "A-" ~ 3.7,
    . == "B+" ~ 3.3,
    . == "B"  ~ 3.0,
    . == "B-" ~ 2.7,
    . == "C+" ~ 2.3,
    . == "C"  ~ 2.0,
    . == "C-" ~ 1.7,
    . == "D+" ~ 1.3,
    . == "D"  ~ 1.0,
    . == "D-" ~ 0.7,
    TRUE ~ NA_real_)))

```

This next step adds a column called avg_grade which finds the mean of all publication grades a player received.
```{r}

nba_draft_gpa <- nba_draft_gpa |>
  mutate(avg_grade = rowMeans(cbind(espn_gr, cbs_gr, br_gr, yahoo_gr, ringer_gr), na.rm = TRUE))

glimpse(nba_draft_gpa)

```

Right off the bat, I want to see the lowest graded players by average. I'm adding a few different performance metrics that I want to test as well: VORP (Value Over Replacement Player), BPM (Box Score Plus/Minus) and Win Shares. VORP measures a player's contribution compared to a replacement-level player, while BPM estimates a player’s net impact on the team per 100 possessions, accounting for both offensive and defensive contributions. Win share accounts for a player's impact translated to wins for their team across their career. In the case of all of these stats, higher numbers are indicators of a good player. 

Maryland's own Jalen Smith, drafted in 2020, received the lowest average marks from media pundits. However, he's still slightly better than replacement level players. The first player that stands out to me is Cameron Johnson, who has nearly double Jalen Smith's win share in with one less year played and is positive across the metrics examined.

```{r}

nba_draft_gpa |>
  filter(!is.na(avg_grade)) |>             
  arrange(avg_grade) |>
  select(yr, Pk, Player, avg_grade, VORP, BPM, WS)

```

Conversely, I found players with the highest average draft grades. A few things to keep in mind with more recently drafted players: They haven't had as much of an opportunity to generate high win share due to lack of experience or being on rebuilding teams. 
```{r}

nba_draft_gpa |>
  filter(!is.na(avg_grade) & !is.na(WS)) |> 
  arrange(desc(avg_grade), WS) |>            
  select(yr, Pk, Player, avg_grade, VORP, BPM, WS)          
  head(20)  

```

Getting further into the analysis, I want to begin identifying the correlation between the collected draft grades and a player's win share.

So none of these are incredibly impressive. Yahoo, right off the bat, shows the strongest positive correlation, suggesting that its grades tend to only somewhat align with how successful players are in win shares. The Ringer has a modest positive correlation, while ESPN and CBS have weak positive correlations. Bleacher Report scored the lowest, suggesting there is almost no relationship between its grading and win shares.

```{r}

grade_cor <- nba_draft_gpa |>
  select(WS, espn_gr, cbs_gr, br_gr, yahoo_gr, ringer_gr) %>%
  summarise(across(everything(), ~ cor(., WS, use = "complete.obs")))

print(grade_cor)

```

Below, I'm doing the same analysis, but with VORP. The Ringer and Yahoo once again distinguish themselves with their grades aligning well with player value in this metric. Followed by CBS, ESPN and BR. 

```{r}

vorp_grade_cor <- nba_draft_gpa |>
  select(VORP, espn_gr, cbs_gr, br_gr, yahoo_gr, ringer_gr) %>%
  summarise(across(everything(), ~ cor(., VORP, use = "complete.obs")))

print(vorp_grade_cor)

```

Finally, I'm trying it with BPM. In this case, The Ringer's draft grades seem to show the strongest relationship with Box Plus/Minus (BPM).

```{r}

bpm_grade_cor <- nba_draft_gpa |>
  select(BPM, espn_gr, cbs_gr, br_gr, yahoo_gr, ringer_gr) %>%
  summarise(across(everything(), ~ cor(., BPM, use = "complete.obs")))

print(bpm_grade_cor)

```

So already, I see that Yahoo and The Ringer are establishing themselves as draft grade leaders based on the metrics I've chosen to look at. 

Next, with the help of ChatGPT (https://chatgpt.com/share/6715c5af-8e08-8010-ba09-0b1f23aea035), I've tried to create an adjusted GPA for each player to compare to their specific and average grades across publications. However, I'm not entirely satisfied with it as it's grading more recent draft picks incredibly poorly because of their lack of production compared to older players with several years of experience in the league. At the moment, I'm not entirely sure how to address that issue.

```{r}

exclude_columns <- c("yr", "Rk", "Pk", "Tm", "espn_gr", "cbs_gr", "br_gr", "yahoo_gr", "ringer_gr", "avg_grade")

columns_for_gpa <- nba_draft_gpa |>
  select_if(is.numeric) |>
  select(-one_of(exclude_columns)) |>
  names()

nba_data_full <- nba_draft_gpa |>
  mutate(player_gpa = rowMeans(select(nba_draft_gpa, all_of(columns_for_gpa)), na.rm = TRUE),
         player_gpa = (player_gpa / max(player_gpa, na.rm = TRUE)) * 4.0)

print(nba_data_full)

```


Instead, I'm going to assign GPA values to the three major metrics I noted earlier in the markdown file --- VORP, WS and BPM. With these GPAs, I'm going to need to develop a way to figure out how to compare each one to the original draft grade and determine if the publication grades are similar/accurate. 

```{r}
nba_draft_gpa <- nba_draft_gpa |>
  mutate(vorp_gpa = case_when(
    VORP > 25 ~ 4.3,     # A+
    VORP > 20 & VORP <= 25 ~ 4.0,  # A
    VORP > 15 & VORP <= 20 ~ 3.7,  # A-
    VORP > 10 & VORP <= 15 ~ 3.3,  # B+
    VORP > 5 & VORP <= 10 ~ 3.0,   # B
    VORP > 0 & VORP <= 5 ~ 2.7,    # B-
    VORP > -5 & VORP <= 0 ~ 2.3,   # C+
    VORP > -10 & VORP <= -5 ~ 2.0, # C
    VORP > -15 & VORP <= -10 ~ 1.7, # C-
    VORP > -20 & VORP <= -15 ~ 1.0, # D
    VORP <= -20 ~ 0.0,   # F
    TRUE ~ NA_real_  # Handle any missing values in VORP
  ))

```

```{r}

nba_draft_gpa <- nba_draft_gpa |>
  mutate(
    bpm_gpa = case_when(
      BPM > 8 ~ 4.3, # A+
      BPM > 6 & BPM <= 8 ~ 4.0, # A
      BPM > 4 & BPM <= 6 ~ 3.7, # A-
      BPM > 2 & BPM <= 4 ~ 3.3, # B+
      BPM > 0 & BPM <= 2 ~ 3.0, # B
      BPM > -2 & BPM <= 0 ~ 2.7, # B-
      BPM > -4 & BPM <= -2 ~ 2.3, # C+
      BPM > -6 & BPM <= -4 ~ 2.0, # C
      BPM > -8 & BPM <= -6 ~ 1.7, # C-
      BPM > -10 & BPM <= -8 ~ 1.0, # D
      BPM <= -10 ~ 0.0, # F
      TRUE ~ NA_real_
    ))
```

```{r}
nba_draft_gpa <- nba_draft_gpa |>
  mutate(
    ws_gpa = case_when(
      WS > 80 ~ 4.3,  # A+
      WS > 60 & WS <= 80 ~ 4.0,  # A
      WS > 40 & WS <= 60 ~ 3.7,  # A-
      WS > 30 & WS <= 40 ~ 3.3,  # B+
      WS > 20 & WS <= 30 ~ 3.0,  # B
      WS > 10 & WS <= 20 ~ 2.7,  # B-
      WS > 5 & WS <= 10 ~ 2.3,   # C+
      WS > 0 & WS <= 5 ~ 2.0,    # C
      WS > -5 & WS <= 0 ~ 1.7,   # C-
      WS > -10 & WS <= -5 ~ 1.0, # D
      WS <= -10 ~ 0.0, # F
      TRUE ~ NA_real_
    ))

```

Starting with VORP, I calculated the differences between each player's draft and VORP GPA. I chose to visualize the findings with a dumbbell chart to reflect the discrepancy between the two values.  

```{r}

vorp_disc <- nba_draft_gpa |>
  mutate(discrepancy = abs(vorp_gpa - avg_grade)) |>
  arrange(desc(discrepancy)) |>
  slice_head(n = 10) |>
  select(yr, Pk, Player, Yrs, VORP, avg_grade, vorp_gpa, discrepancy)

```

```{r}

ggplot(vorp_disc, aes(y = reorder(Player, -discrepancy))) +
  geom_segment(aes(x = avg_grade, xend = vorp_gpa, yend = Player), color = "gray") +
  geom_point(aes(x = avg_grade), color = "black", size = 3) +
  geom_point(aes(x = vorp_gpa), color = "orange", size = 3) +
  scale_x_continuous(breaks = seq(0, 4.5, by = 0.25)) +
  labs(
    title = "The Media Severely Underrated Jalen Smith and Bam Adebayo",
    x = "GPA Scale",
    y = "Player",
    caption = "Black: Average Draft Grade GPA, Orange: Actual VORP GPA (Data from Basketball Ref and Media Outlets) | By Pablo Suarez"
  ) +
  theme_minimal()

```

```{r}

bpm_disc <- nba_draft_gpa |>
  mutate(discrepancy = abs(bpm_gpa - avg_grade)) |>
  arrange(desc(discrepancy)) |>
  slice_head(n = 10) |>
  select(yr, Pk, Player, Yrs, VORP, avg_grade, bpm_gpa, discrepancy)

```

```{r}

ggplot(bpm_disc, aes(y = reorder(Player, -discrepancy))) +
  geom_segment(aes(x = avg_grade, xend = bpm_gpa, yend = Player), color = "gray") +
  geom_point(aes(x = avg_grade), color = "black", size = 3) +
  geom_point(aes(x = bpm_gpa), color = "orange", size = 3) +
  scale_x_continuous(breaks = seq(0, 4.5, by = 0.25)) +
  labs(
    title = "Johnny Davis in a (Disappointing) League of His Own",
    subtitle = "Top Ten Players with a Volatile Box Plus/Minus Differential", 
    x = "GPA Scale",
    y = "Player",
    caption = "Black: Average Draft Grade GPA, Orange: Actual BPM GPA (Data from Basketball Ref and Media Outlets) | By Pablo Suarez"
  ) +
  theme_minimal()

```

```{r}

ws_disc <- nba_draft_gpa |>
  mutate(discrepancy = abs(ws_gpa - avg_grade)) |>
  arrange(desc(discrepancy)) |>
  slice_head(n = 10) |>
  select(yr, Pk, Player, Yrs, VORP, avg_grade, ws_gpa, discrepancy)

```

```{r}

ggplot(ws_disc, aes(y = reorder(Player, -discrepancy))) +
  geom_segment(aes(x = avg_grade, xend = ws_gpa, yend = Player), color = "gray") +
  geom_point(aes(x = avg_grade), color = "black", size = 3) +
  geom_point(aes(x = ws_gpa), color = "orange", size = 3) +
  scale_x_continuous(breaks = seq(0, 4.5, by = 0.25)) +
  labs(
    title = "Win Share",
    x = "GPA Scale",
    y = "Player",
    caption = "Black: Average Draft Grade GPA, Orange: Actual VORP GPA (Data from Basketball Ref and Media Outlets) | By Pablo Suarez"
  ) +
  theme_minimal()

```


```{r}

wspy_nba_draft_gpa <- nba_draft_gpa |>
  mutate(ws_per_year = ifelse(Yrs > 0, WS / Yrs, NA))

```

```{r}

wspy_nba_draft_gpa <- nba_draft_gpa |>
  mutate(ws_per_year = ifelse(Yrs > 0, WS / Yrs, NA))

high_ws_low_gpa <- wspy_nba_draft_gpa |>
  filter(!is.na(ws_per_year), !is.na(avg_grade)) |>
  arrange(desc(ws_per_year), avg_grade) |>
  slice_head(n = 10)

high_gpa_low_ws <- wspy_nba_draft_gpa |>
  filter(!is.na(ws_per_year), !is.na(avg_grade)) |>
  arrange(desc(avg_grade), ws_per_year) |>
  slice_head(n = 10)

```


```{r}

ggplot(high_ws_low_gpa, aes(x = reorder(Player, ws_per_year), y = ws_per_year, fill = avg_grade)) +
  geom_bar(stat = "identity") +
 scale_fill_gradient2(low = "black", mid = "grey", high = "red", midpoint = median(high_ws_low_gpa$avg_grade, na.rm = TRUE)) +
  labs(
    title = "The Superstars Live Up to the Billing",
    x = "Player",
    y = "Win Share per Year",
    fill = "Average Draft GPA",
   caption = "Data from Basketball Ref and Media Outlets | By Pablo Suarez"
  ) +
  coord_flip() +
  theme_minimal()

```
```{r}
ggplot(high_gpa_low_ws, aes(x = reorder(Player, avg_grade), y = avg_grade, fill = ws_per_year)) +
  geom_bar(stat = "identity") +
  scale_fill_gradient2(low = "black", mid = "grey", high = "red", midpoint = median(high_gpa_low_ws$avg_grade, na.rm = TRUE)) +
  labs(
    title = "High avg_gpa with Low Win Share per Year",
    x = "Player",
    y = "Average GPA",
    fill = "Win Share per Year"
  ) +
  theme_minimal() +
  coord_flip()
```




