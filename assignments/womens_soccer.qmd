---
title: "Women's Soccer Data"
output: html_notebook
---

We'll use this notebook to explore some NCAA women's soccer data and [our questions](https://docs.google.com/spreadsheets/d/1kTSrnl1URmcexIWLDMWqDnp3q-c2OS45uifnhjp10n4/edit#gid=0). First, let's load the tidyverse library:

```{r}
library(tidyverse)
```

We'll want to start with 2023 match data, which is located in [this GitHub repository](https://github.com/dwillis/NCAAWomensSoccerData). We can load the match data directly from GitHub using `read_csv`:

```{r}
matches_2023 <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2023.csv")
matches_2024 <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2024.csv")
```

Let's take a look at this data to see what it contains, using `head` and `glimpse`:

```{r}

head(matches_2023)
glimpse(matches_2023)
view(matches_2023)

```

Now, onto the questions using aggregates, which means `group_by` and `summarize`:

1. How many shots in total has Maryland attempted and how many have been on goal? Calculate a percentage of shots on goal.

The Maryland Terrapins have attempted 180 total shots and 77 of those were on goal. A calculation of their percentage of shots on goal shows 42.77778%. 

```{r}

matches_2024 |>
  group_by(team) |>
  summarize(
    total_sh = sum(sh_att),
    shots_ong = sum(so_g),
    pct_sog = (shots_ong / total_sh) * 100) |>
  filter(team == "Maryland Terrapins, Terps") |>
  arrange(desc(total_sh))

```

2. What about the same shot stats from last season's first four games? You'll need to load the matches from 2022 - just change the season in the URL - and filter by date to find the first four games.

In the first four games of the 2022 season, the Maryland Terrapins had 48 shots, with 23 of those on goal. That calculates to 47.91667% of shots on goal over that stretch of games.

```{r}
matches_2022 <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2022.csv")
view(matches_2022)
```

```{r}

matches_2022 |>
  filter(
    team == ("Maryland Terrapins, Terps"),  
    date %in% c("2022-08-18", "2022-08-25", "2022-08-28", "2022-09-01")) |>
  group_by(team) |>
  summarize(
    total_sh = sum(sh_att), 
    shots_ong = sum(so_g),
    pct_sog = (shots_ong / total_sh) * 100
  ) |>
  arrange(desc(total_sh))  

```


3. What about draws - Maryland started 2022 with 4 ties. Have any other teams had as many this season?

No other teams have started the 2024 season with four or more draws. However, six schools have three draws. 

```{r}

matches_2024 <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2024.csv")
view(matches_2024)

```

```{r}

draws_24 <- matches_2024 |>
  filter(outcome == "Draw")
  
```

```{r}

draws_24 |>
  group_by(team) |>
  summarise(
    tot_draws = n()) |>
  #filter(tot_draws >= 4) |>
  arrange(desc(tot_draws))

```

4. How many total corner kicks has Maryland had so far and how many have its opponents have? Calculate the difference between the two totals for every team.

The Maryland Terrapins have earned 18 corner kicks so far in the 2024 season, its opponents have earned 23 corner kicks, indicating a difference of -5 corners in favor of the Terps' opponents. Among all schools in the 2024 matches data frame, the Virginia Tech Hokies have the highest positive difference in corners with 42. The McNeese Cowgirls have the largest negative difference, earning 41 less corners than opponents. For the Hokies, the disparity could play a factor in their undefeated start to the season (4-0-1).

```{r}

matches_2024 |>
 filter(
    team == ("Maryland Terrapins, Terps")) |>
      summarise(
        terp_corners = sum(corners),
        opp_corners = sum(defensive_corners),
        diff_corners = sum(corners) - sum(defensive_corners)
      )

```


```{r}

matches_2024 |>
  group_by(team) |>
  summarise(
    tot_corners = sum(corners),
    opp_corners = sum(defensive_corners),
    diff_corners = sum(corners) - sum(defensive_corners)
  ) |>
  arrange(desc(diff_corners))

```

```{r}

#corners_24 <- matches_2024 |> 
 # mutate(corner_ratio = corners/defensive_corners)


corners_24 |>
  filter(corner_ratio >= 4.0)|>
  group_by(outcome)|>
  summarise(count = n())
  

```


```{r}

matches_2024 |>
  group_by(team) |>
  summarize(
    total_sh = sum(sh_att),
    shots_ong = sum(so_g),
    pct_sog = (shots_ong / total_sh) * 100) |>
  arrange(desc(pct_sog))


```


Create a significance test on total scoring (goals + defensive_goals) for all NCAA teams using the 2023 and 2024 data. Load the 2023 and 2024 matches data above. For both, we'll need to add a column called `total_goals` and populate it using `mutate()`.

Our Null Hypothesis is that there is no significant difference in the average number of goals scored in 2023 and 2024. Our Alternative Hypothesis is there is a significant difference in the average number of goals scored in 2023 and 2024.

Based on the output (read from the bottom), is scoring up this year, and is that result significant? Explain your answers in the notebook

What about scoring in Maryland games? Do the same t-test and answer the same questions.

```{r}
 
goals_23 <- matches_2023 |>
  mutate(total_goals = goals + defensive_goals)

goals_24 <- matches_2024 |>
  mutate(total_goals = goals + defensive_goals)

```


Our Null Hypothesis is that there is no significant difference in the average number of goals scored in 2023 and 2024. Our Alternative Hypothesis is there is a significant difference in the average number of goals scored in 2023 and 2024.


```{r}

g_result <- t.test(goals_23$total_goals, goals_24$total_goals, alternative="two.sided", var.equal = TRUE)
print(g_result)

```
Based on the output (read from the bottom), is scoring up this year, and is that result significant?

Based on the output, the samples are incredibly similar but there is a marginal increase in scoring this year. However, the incredibly small p-value suggests that there is a statistical significance in the scoring increase between the seasons. Therefore, we'd reject the null hypothesis in this case.

What about scoring in Maryland games? Do the same t-test and answer the same questions.

```{r}

umd_goals23 <- goals_23 |> filter(team == 'Maryland Terrapins, Terps') 
umd_goals24 <- goals_24 |> filter(team == 'Maryland Terrapins, Terps')

umd_g_result <- t.test(umd_goals23$total_goals, umd_goals24$total_goals, alternative ="two.sided", var.equal = TRUE)

print(umd_g_result)

```

Because the p-value is larger than our 0.05 significance level, we can conclude that there is no statistically significant difference between the average number of goals scored by UMD between the 2023 season and the beginning of the 2024 season. In essence, it's probably too early to tell.


```{r}

umd_goals23 <- goals_23 |> filter(team == 'Maryland Terrapins, Terps') |> filter(date < '2023-09-12')
umd_goals24 <- goals_24 |> filter(team == 'Maryland Terrapins, Terps') 

umd_g_result <- t.test(umd_goals23$total_goals, umd_goals24$total_goals, alternative ="two.sided", var.equal = TRUE)

print(umd_g_result)

```

After adjusting the UMD test to filter and target early season games, we see a larger disparity in scoring between the seasons. However, our t-test is still larger than 0.05, so the data does not provide strong enough evidence to conclude that there is a significant difference in scoring.


### Correlations


```{r}

correlations <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2024.csv")

```

```{r}

newcorrelations <- correlations |> 
  mutate(
    differential = goals - defensive_goals
    )

```

```{r}

newcorrelations |> summarise(correlation = cor(differential, fouls, method="pearson"))

```

Correlation function takes two factors (in our case, differential and fouls) and specifying we want a pearson correlation. The number we get back is the correlation coefficient. So on a scale of -1 to 1, where 0 means there’s no relationship at all and 1 or -1 means a perfect relationship, fouls and whether or not the team scores more goals than it gives up are at 0.02326518. You could say they’re about 2 percent related toward the positive – more fouls, the higher your differential. Another way to say it? They’re almost 98 percent not related.

What about the number of yellow cards instead of fouls? Do more aggressive defensive teams also score more?

```{r}

newcorrelations |> summarise(correlation = cor(differential, yellow_cards, method="pearson"))

```
```{r}

fit <- lm(differential ~ fouls, data = newcorrelations)
summary(fit) #summary function represents the result

```
The p-value here is meaningful in the sense that this could happen based on random chance. 

How much of goal differential can be explained by fouls? The answer is basically not at all.

In this case, we could try to predict a team’s score differential in a game – will they score more than they give up – by using y=mx+b. In this case, y is the aggregate score, m is 0.009306 and b is 0.008153. So we would multiply a teams total fouls by 0.009306 and then add 0.008153. to it. The result would tell you what the total aggregate score in the game would be, according to our model. Chance that you’re even close with this? Almost none. Did I say we should quit? Yeah.


_Correlations Assignment_

Write a few sentences describing how you might pitch a story about the UMD soccer team's performance this year that uses the model that you built but doesn't mention the statistical output. In other words, craft a pitch that describes the essence of the model's results, using specific matches, without resorting to p-values and r-squared values.
---

Nearly halfway through their season and three wins under their belt, the UMD women's soccer team is still sorting out its on-pitch identity to bolster its position in the win column. One place they can start is by following an age-old proverb: Sharing is caring. 

Now, let's make something clear. This is a team that struggled to score goals during the 2023 season -- nine goals across 18 games, all of which came in the first half of the season. So far, the Terps have exceeded that figure with 13 goals. While that increase in performance hasn't necessarily translated to greater success in the standings, there is an uptick in the passing game that has potentially helped the team's finishing ability. The Terps finished the 2023 season with just four assists. Through nine games this year, they have 11 assists (with five coming in their Sept. 8 win against VCU). It's not enough to say more efficient passing and greater assists will inevitably lead this team to success, but it offers a potential point of emphasis for this team moving forward. 


```{r}

newcorrelations |> summarise(correlation = cor(goals, assists, method="pearson"))

```

```{r}

filtered_data <- newcorrelations |>
  filter(newcorrelations[["team"]] == 'Maryland Terrapins, Terps')
fit2 <- lm(goals ~ assists, data = filtered_data)
summary(fit2)

```




Extra codeblocks for testing variables:

```{r}

newcorrelations |> summarise(correlation = cor(opponent_score, defensive_corners, method="pearson"))

```

```{r}

filtered_data <- newcorrelations |>
  filter(newcorrelations[["team"]] == 'Maryland Terrapins, Terps')
fit2 <- lm(opponent_score ~ defensive_corners, data = filtered_data)
summary(fit2)

```

















